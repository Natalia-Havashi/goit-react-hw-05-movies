{"version":3,"file":"static/js/247.a4ef9eb6.chunk.js","mappings":"yNAgDA,UA5Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,gHAEWC,EAAAA,EAAAA,IAAgBP,GAF3B,gBAEJG,EAFI,EAEJA,KACRC,EAAQD,GAHI,gDAKZK,QAAQC,IAAR,MALY,yDAAH,qDAQbH,GACD,GAAE,CAACN,KAEF,4BACE,iCACCG,GAAQA,EAAKO,OAAS,GACrB,wBACGP,GACCA,EAAKQ,KAAI,SAAAC,GAAK,OACZ,0BACGA,EAAMC,cACL,gBACEC,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAKH,EAAMI,QAGb,gBAAKF,IAAI,sCAAsCC,IAAI,MAGrD,uBAAIH,EAAMI,QACV,uBAAIJ,EAAMK,cAXHL,EAAMM,GADH,OAiBlB,kFAIP,C,+LC5CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAEJ,IAAMC,EAAiB,mCAAG,+GAENF,EAAAA,EAAAA,IAAU,sBAFJ,uBAErBG,EAFqB,EAErBA,KAFqB,kBAItBA,GAJsB,gCAM7Bd,QAAQC,IAAR,MAN6B,yDAAH,qDAUjBc,EAAe,mCAAG,WAAMC,GAAN,kGAEJL,EAAAA,EAAAA,IAAU,eAAgB,CAAEM,OAAQ,CAAED,MAAAA,KAFlC,uBAEnBF,EAFmB,EAEnBA,KAFmB,kBAIpBA,GAJoB,gCAM3Bd,QAAQC,IAAR,MAN2B,yDAAH,sDAUfiB,EAAgB,mCAAG,WAAM1B,GAAN,kGAELmB,EAAAA,EAAAA,IAAA,gBAAmBnB,IAFd,uBAEpBsB,EAFoB,EAEpBA,KAFoB,kBAIrBA,GAJqB,gCAM5Bd,QAAQC,IAAR,MAN4B,yDAAH,sDAUhBF,EAAe,mCAAG,WAAMP,GAAN,kGAEJmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,aAFI,uBAEnBsB,EAFmB,EAEnBA,KAFmB,kBAIpBA,GAJoB,gCAM3Bd,QAAQC,IAAR,MAN2B,yDAAH,sDAUfkB,EAAe,mCAAG,WAAM3B,GAAN,kGAEJmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,aAFI,uBAEnBsB,EAFmB,EAEnBA,KAFmB,kBAIpBA,GAJoB,gCAM3Bd,QAAQC,IAAR,MAN2B,yDAAH,qD","sources":["components/Cast/Cast.jsx","servise/servise.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'servise/servise';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const { cast } = await getMovieCredits(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCast();\n  }, [movieId]);\n  return (\n    <div>\n      <h2>Cast</h2>\n      {cast && cast.length > 0 ? (\n        <ul>\n          {cast &&\n            cast.map(actor => (\n              <li key={actor.id}>\n                {actor.profile_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w185${actor.profile_path}`}\n                    alt={actor.name}\n                  />\n                ) : (\n                  <img src=\"https://via.placeholder.com/185x250\" alt=\"\" />\n                )}\n\n                <p>{actor.name}</p>\n                <p>{actor.character}</p>\n              </li>\n            ))}\n        </ul>\n      ) : (\n        <p>There is no information about the actors of the film</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '393e19defb9f3dee2fc96da932bb4d41',\n};\nexport const getTrendingMivies = async () => {\n  try {\n    const { data } = await axios.get('trending/movie/day');\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovies = async query => {\n  try {\n    const { data } = await axios.get('search/movie', { params: { query } });\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesDetails = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","getCast","getMovieCredits","console","log","length","map","actor","profile_path","src","alt","name","character","id","axios","api_key","getTrendingMivies","data","getSearchMovies","query","params","getMoviesDetails","getMovieReviews"],"sourceRoot":""}