{"version":3,"file":"static/js/309.cfafb95b.chunk.js","mappings":"yNAsCA,UAlCe,WACb,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAEYC,EAAAA,EAAAA,IAAgBJ,GAF5B,gBAENK,EAFM,EAENA,QACRN,EAAWM,GAHG,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQfJ,GACD,GAAE,CAACH,KAGF,yBACGF,GAAWA,EAAQU,OAAS,GAC3B,wBACGV,EAAQW,KAAI,SAAAC,GAAM,OACjB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAQrB,sDAIP,C,+LClCDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAEJ,IAAMC,EAAiB,mCAAG,+GAENF,EAAAA,EAAAA,IAAU,sBAFJ,uBAErBG,EAFqB,EAErBA,KAFqB,kBAItBA,GAJsB,gCAM7BX,QAAQC,IAAR,MAN6B,yDAAH,qDAUjBW,EAAe,mCAAG,WAAMC,GAAN,kGAEJL,EAAAA,EAAAA,IAAU,eAAgB,CAAEM,OAAQ,CAAED,MAAAA,KAFlC,uBAEnBF,EAFmB,EAEnBA,KAFmB,kBAIpBA,GAJoB,gCAM3BX,QAAQC,IAAR,MAN2B,yDAAH,sDAUfc,EAAgB,mCAAG,WAAMrB,GAAN,kGAELc,EAAAA,EAAAA,IAAA,gBAAmBd,IAFd,uBAEpBiB,EAFoB,EAEpBA,KAFoB,kBAIrBA,GAJqB,gCAM5BX,QAAQC,IAAR,MAN4B,yDAAH,sDAUhBe,EAAe,mCAAG,WAAMtB,GAAN,kGAEJc,EAAAA,EAAAA,IAAA,gBAAmBd,EAAnB,aAFI,uBAEnBiB,EAFmB,EAEnBA,KAFmB,kBAIpBA,GAJoB,gCAM3BX,QAAQC,IAAR,MAN2B,yDAAH,sDAUfH,EAAe,mCAAG,WAAMJ,GAAN,kGAEJc,EAAAA,EAAAA,IAAA,gBAAmBd,EAAnB,aAFI,uBAEnBiB,EAFmB,EAEnBA,KAFmB,kBAIpBA,GAJoB,gCAM3BX,QAAQC,IAAR,MAN2B,yDAAH,qD","sources":["components/Revies/Revies.jsx","servise/servise.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'servise/servise';\n\nconst Revies = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getRevies = async () => {\n      try {\n        const { results } = await getMovieReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getRevies();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews && reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>There are no reviews yet.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Revies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '393e19defb9f3dee2fc96da932bb4d41',\n};\nexport const getTrendingMivies = async () => {\n  try {\n    const { data } = await axios.get('trending/movie/day');\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovies = async query => {\n  try {\n    const { data } = await axios.get('search/movie', { params: { query } });\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesDetails = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getRevies","getMovieReviews","results","console","log","length","map","review","author","content","id","axios","api_key","getTrendingMivies","data","getSearchMovies","query","params","getMoviesDetails","getMovieCredits"],"sourceRoot":""}