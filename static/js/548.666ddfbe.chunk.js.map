{"version":3,"file":"static/js/548.666ddfbe.chunk.js","mappings":"sPA6BA,EA3BmB,SAAC,GAAgD,IAA9CA,EAA6C,EAA7CA,gBAAiBC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAYjD,OACE,0BACE,kBAAMC,SAbW,SAAAC,GACnBA,EAAMC,gBACNH,EAAUD,EAIX,EAOG,WACE,kBACEK,KAAK,SACLC,MAAON,EACPO,SATa,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MAChCP,EAAgB,CAAEU,OAAQH,GAC3B,EAQOI,YAAY,mBAEd,mBAAQL,KAAK,SAAb,wBAIP,E,iBCiBD,EAvCoB,WAAO,IAAD,EACxB,GAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBhB,EAArB,KACMC,EAAU,UAAGe,EAAaC,IAAI,iBAApB,QAAiC,GAC3CC,GAAWC,EAAAA,EAAAA,MAmBjB,OAjBAC,EAAAA,EAAAA,YAAU,YACPnB,GAAcD,EAAgB,CAAC,EACjC,GAAE,CAACC,EAAYD,KAEhBoB,EAAAA,EAAAA,YAAU,WACR,IAAMlB,EAAS,mCAAG,0FACZD,EADY,2CAGcoB,EAAAA,EAAAA,IAAgBpB,GAH9B,gBAGJqB,EAHI,EAGJA,QACRR,EAAUQ,GAJE,gDAMZC,QAAQC,IAAR,MANY,yDAAH,qDAUftB,GACD,GAAE,CAACD,KAEF,4BACE,SAAC,EAAD,CAAYD,gBAAiBA,EAAiBC,WAAYA,KAC1D,wBACGY,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMZ,GAAlC,SACGS,KAFID,EADC,QAUnB,C,+LCxCDK,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAEJ,IAAMC,EAAiB,mCAAG,+GAENF,EAAAA,EAAAA,IAAU,sBAFJ,uBAErBG,EAFqB,EAErBA,KAFqB,kBAItBA,GAJsB,gCAM7BX,QAAQC,IAAR,MAN6B,yDAAH,qDAUjBH,EAAe,mCAAG,WAAMc,GAAN,kGAEJJ,EAAAA,EAAAA,IAAU,eAAgB,CAAEK,OAAQ,CAAED,MAAAA,KAFlC,uBAEnBD,EAFmB,EAEnBA,KAFmB,kBAIpBA,GAJoB,gCAM3BX,QAAQC,IAAR,MAN2B,yDAAH,sDAUfa,EAAgB,mCAAG,WAAMC,GAAN,kGAELP,EAAAA,EAAAA,IAAA,gBAAmBO,IAFd,uBAEpBJ,EAFoB,EAEpBA,KAFoB,kBAIrBA,GAJqB,gCAM5BX,QAAQC,IAAR,MAN4B,yDAAH,sDAUhBe,EAAe,mCAAG,WAAMD,GAAN,kGAEJP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,aAFI,uBAEnBJ,EAFmB,EAEnBA,KAFmB,kBAIpBA,GAJoB,gCAM3BX,QAAQC,IAAR,MAN2B,yDAAH,sDAUfgB,EAAe,mCAAG,WAAMF,GAAN,kGAEJP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,aAFI,uBAEnBJ,EAFmB,EAEnBA,KAFmB,kBAIpBA,GAJoB,gCAM3BX,QAAQC,IAAR,MAN2B,yDAAH,qD","sources":["components/MoviesForm/MoviesForm.jsx","pages/MoviesPage.jsx","servise/servise.js"],"sourcesContent":["import React from 'react';\n\nconst MoviesForm = ({ setSearchParams, movieQuery, getSearch }) => {\n  const handleSubmit = event => {\n    event.prevenDefault();\n    getSearch(movieQuery)\n    // event.target.elements.query.value();\n    // const value = query !== '' ? {query} : {};\n    // setSearchParams(value)\n  };\n\n  const handleChange = ({ target: { value } }) => {\n    setSearchParams({ search: value });\n  }; \n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"search\"\n          value={movieQuery}\n          onChange={handleChange}\n          placeholder=\"Enter a value\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n\nexport default MoviesForm;\n","import React, { useEffect, useState } from 'react';\nimport { getSearchMovies } from 'servise/servise';\nimport MoviesForm from 'components/MoviesForm/MoviesForm';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst MoviesPages = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieQuery = searchParams.get('search') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    !movieQuery && setSearchParams({});\n  }, [movieQuery, setSearchParams]); //чистимо рядок запиту\n\n  useEffect(() => {\n    const getSearch = async () => {\n      if (movieQuery) {\n        try {\n          const { results } = await getSearchMovies(movieQuery);\n          setMovies(results);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n    getSearch();\n  }, [movieQuery]);\n  return (\n    <div>\n      <MoviesForm setSearchParams={setSearchParams} movieQuery={movieQuery} />\n      <ul>\n        {movies.map(({ id, title}) => (\n          <li key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesPages;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '393e19defb9f3dee2fc96da932bb4d41',\n};\nexport const getTrendingMivies = async () => {\n  try {\n    const { data } = await axios.get('trending/movie/day');\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovies = async query => {\n  try {\n    const { data } = await axios.get('search/movie', { params: { query } });\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesDetails = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["setSearchParams","movieQuery","getSearch","onSubmit","event","prevenDefault","type","value","onChange","target","search","placeholder","useState","movies","setMovies","useSearchParams","searchParams","get","location","useLocation","useEffect","getSearchMovies","results","console","log","map","id","title","to","state","from","axios","api_key","getTrendingMivies","data","query","params","getMoviesDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}